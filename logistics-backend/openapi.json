{
  "openapi": "3.0.0",
  "info": {
    "title": "Diggys Logistics API",
    "version": "1.0.0",
    "description": "A simple logistics API"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/orders": {
      "post": {
        "summary": "Create a new order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created"
          }
        }
      },
      "get": {
        "summary": "Get all orders",
        "responses": {
          "200": {
            "description": "List of orders"
          }
        }
      }
    },
    "/api/orders/{orderId}": {
      "put": {
        "summary": "Update an order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated"
          }
        }
      },
      "delete": {
        "summary": "Delete an order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/orders/{orderId}/events": {
      "post": {
        "summary": "Add an event to an order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event added"
          }
        }
      },
      "get": {
        "summary": "Get all events of an order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events"
          }
        }
      }
    },
    "/api/orders/{orderId}/events/recent": {
      "get": {
        "summary": "Get the most recent event of an order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Most recent event"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["Processing", "Packaging", "Dispatched", "Delivered", "Cancelled", "Recalled"]
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "required": ["orderId", "product", "quantity", "source", "destination", "status"]
      },
      "Event": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "custodian": {
            "type": "string"
          }
        },
        "required": ["description", "location", "custodian"]
      }
    }
  }
}
