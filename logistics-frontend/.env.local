NEXT_PUBLIC_API_URL=http://localhost:8080
NEXT_PUBLIC_FRONTEGG_BASE_URL=https://dignifiedlabs-dev.frontegg.com
# The AppUrl you set during integration - this is to tell Frontegg your application hostname
FRONTEGG_APP_URL=http://localhost:3030

# The Frontegg domain is your unique URL to connect to the Frontegg gateway
FRONTEGG_BASE_URL=https://dignifiedlabs-dev.frontegg.com

# Your Frontegg environment's Client ID
FRONTEGG_CLIENT_ID=797c407d-9cd5-4eaf-a624-f793fc95bb2e

# Your Frontegg application ID
# Available from @frontegg/nextjs@9.2.0
# FRONTEGG_APP_ID=797c407d-9cd5-4eaf-a624-f793fc95bb2e

# The statless session encruption password, used to encrypt
# jwt before sending it to the client side.
#
# For quick password generation use the following command:
#    node -e "console.log(crypto.randomBytes(32).toString('hex'))"
FRONTEGG_ENCRYPTION_PASSWORD=37e7914dfd5abf5bdba5c2ef6ac8c1e98e25b97fe48142fa3ec1310031c476a6

# The statless session cookie name - you should not change this
FRONTEGG_COOKIE_NAME=fe_session

# By default on each refresh of the page the next middleware will try to refresh the access token even if it’s still valid. The below option allows to disable that behavior and re-use the access token and thus to improve refresh times
# Only for pages directory.
DISABLE_INITIAL_PROPS_REFRESH_TOKEN=true

FRONTEGG_HOSTED_LOGIN=true

# For printing verbose log messages in regards to nextjs middleware activity
# FRONTEGG_LOG_LEVEL=debug

# For improving nextjs perfomrance by providing environment public key to the nextjs middleware.
# The values can be found under [ENVIRONMENT] → Authentication → Identity provider → OIDC endpoints → JSON web key. 
# Extract the object from within the `keys` array and use it as the below variable.
#FRONTEGG_JWT_PUBLIC_KEY='{"kty":"RSA", "kid":"xxx", "use":"sig", "alg":"RS256", "n":"xxxx", "e":"xxx"}'